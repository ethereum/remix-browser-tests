# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2.1
parameters:
  run_flaky_tests:
    type: boolean
    default: false
orbs:
  browser-tools: circleci/browser-tools@1.4.0
  node: circleci/node@5.0.2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: cimg/base:current

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
    resource_class:
      xlarge
      # - image: circleci/mongo:3.4.4
    environment:
      - COMMIT_AUTHOR_EMAIL: "yann@ethereum.org"
      - COMMIT_AUTHOR: "Circle CI"
    working_directory: ~/remix-project
    steps:
      - checkout
      - node/install:
          install-yarn: true
          node-version: "v14.17.6"
      - restore_cache:
          keys:
            - v1-deps-{{ checksum "yarn.lock" }}
      - run: yarn
      - save_cache:
          key: v1-deps-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
      - run: yarn run downloadsolc_assets
      - run: npx nx build remix-ide
      - run: npx nx build remix-ide-e2e-src-local-plugin

      - run: yarn run build:libs
      - run: mkdir persist && zip -r persist/dist.zip dist
      - persist_to_workspace:
          root: .
          paths:
            - "persist"
  lint:
    docker:
      # specify the version you desire here
      - image: cimg/base:current

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
    resource_class:
      xlarge
      # - image: circleci/mongo:3.4.4
    environment:
      - COMMIT_AUTHOR_EMAIL: "yann@ethereum.org"
      - COMMIT_AUTHOR: "Circle CI"
    working_directory: ~/remix-project
    parallelism: 35
    steps:
      - checkout
      - node/install:
          install-yarn: true
          node-version: "v14.17.6"
      - restore_cache:
          keys:
            - v1-deps-{{ checksum "yarn.lock" }}
      - run: yarn
      - run:
          name: Remix Libs Linting
          command: ./apps/remix-ide/ci/lint.sh
  remix-libs:
    docker:
      # specify the version you desire here
      - image: cimg/base:current

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
    resource_class:
      xlarge
      # - image: circleci/mongo:3.4.4
    environment:
      - COMMIT_AUTHOR_EMAIL: "yann@ethereum.org"
      - COMMIT_AUTHOR: "Circle CI"
    working_directory: ~/remix-project

    steps:
      - checkout
      - node/install:
          install-yarn: true
          node-version: "v14.17.6"
      - attach_workspace:
          at: .
      - run: unzip ./persist/dist.zip
      - restore_cache:
          keys:
            - v1-deps-{{ checksum "yarn.lock" }}
      - run: yarn
      - run: cd dist/libs/remix-tests && yarn
      - run: yarn run test:libs

  remix-ide-chrome:
    docker:
      # specify the version you desire here
      - image: cimg/base:current

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
    resource_class:
      xlarge
      # - image: circleci/mongo:3.4.4
    environment:
      - COMMIT_AUTHOR_EMAIL: "yann@ethereum.org"
      - COMMIT_AUTHOR: "Circle CI"
    working_directory: ~/remix-project

    parallelism: 95
    steps:
      - node/install:
          install-yarn: true
          node-version: "v14.17.6"
      - browser-tools/install-chrome
      - browser-tools/install-chromedriver
      - run:
          command: |
            google-chrome --version
            chromedriver --version
          name: Check install
      - checkout
      - attach_workspace:
          at: .
      - run: unzip ./persist/dist.zip
      - restore_cache:
          keys:
            - v1-deps-{{ checksum "yarn.lock" }}
      - run: yarn
      - run: 
          name: Java
          command: sudo apt update && sudo apt install default-jre
      - run:
          name: Install Selenium
          command: yarn run selenium-install
      - run:
          name: Run Selenium
          command: yarn run selenium
          background: true
      - run: ./apps/remix-ide/ci/browser_test.sh chrome
      - store_test_results:
          path: ./reports/tests
      - store_artifacts:
          path: ./reports/screenshots

  flaky-chrome:
    docker:
      # specify the version you desire here
      - image: cimg/base:current

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
    resource_class:
      xlarge
      # - image: circleci/mongo:3.4.4
    environment:
      - COMMIT_AUTHOR_EMAIL: "yann@ethereum.org"
      - COMMIT_AUTHOR: "Circle CI"
    working_directory: ~/remix-project

    parallelism: 95
    steps:
      - node/install:
          install-yarn: true
          node-version: "v14.17.6"
      - browser-tools/install-chrome
      - browser-tools/install-chromedriver
      - run:
          command: |
            google-chrome --version
            chromedriver --version
          name: Check install
      - checkout
      - attach_workspace:
          at: .
      - run: unzip ./persist/dist.zip
      - restore_cache:
          keys:
            - v1-deps-{{ checksum "yarn.lock" }}
      - run: yarn
      - run: 
          name: Java
          command: sudo apt update && sudo apt install default-jre
      - run:
          name: Install Selenium
          command: yarn run selenium-install
      - run:
          name: Run Selenium
          command: yarn run selenium
          background: true
      - run: ./apps/remix-ide/ci/flaky.sh chrome
      - store_test_results:
          path: ./reports/tests
      - store_artifacts:
          path: ./reports/screenshots

  remix-ide-firefox:
    docker:
      # specify the version you desire here
      - image: cimg/base:current

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
    resource_class:
      xlarge
      # - image: circleci/mongo:3.4.4
    environment:
      - COMMIT_AUTHOR_EMAIL: "yann@ethereum.org"
      - COMMIT_AUTHOR: "Circle CI"
    working_directory: ~/remix-project

    parallelism: 95
    steps:
      - node/install:
          install-yarn: true
          node-version: "v14.17.6"
      - browser-tools/install-firefox
      - browser-tools/install-geckodriver
      - run:
          command: |
            firefox --version
            geckodriver --version

          name: Check install
      - checkout
      - attach_workspace:
          at: .
      - run: unzip ./persist/dist.zip
      - restore_cache:
          keys:
            - v1-deps-{{ checksum "yarn.lock" }}
      - run: yarn
      - run: 
          name: Java
          command: sudo apt update && sudo apt install default-jre
      - run:
          name: Install Selenium
          command: yarn run selenium-install
      - run:
          name: Run Selenium
          command: yarn run selenium
          background: true
      - run: ./apps/remix-ide/ci/browser_test.sh firefox
      - store_test_results:
          path: ./reports/tests
      - store_artifacts:
          path: ./reports/screenshots
  flaky-firefox:
    docker:
      # specify the version you desire here
      - image: cimg/base:current

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
    resource_class:
      xlarge
      # - image: circleci/mongo:3.4.4
    environment:
      - COMMIT_AUTHOR_EMAIL: "yann@ethereum.org"
      - COMMIT_AUTHOR: "Circle CI"
    working_directory: ~/remix-project

    parallelism: 95
    steps:
      - node/install:
          install-yarn: true
          node-version: "v14.17.6"
      - browser-tools/install-firefox
      - browser-tools/install-geckodriver
      - run:
          command: |
            firefox --version
            geckodriver --version

          name: Check install
      - checkout
      - attach_workspace:
          at: .
      - run: unzip ./persist/dist.zip
      - restore_cache:
          keys:
            - v1-deps-{{ checksum "yarn.lock" }}
      - run: yarn
      - run: 
          name: Java
          command: sudo apt update && sudo apt install default-jre
      - run:
          name: Install Selenium
          command: yarn run selenium-install
      - run:
          name: Run Selenium
          command: yarn run selenium
          background: true
      - run: ./apps/remix-ide/ci/flaky.sh firefox
      - store_test_results:
          path: ./reports/tests
      - store_artifacts:
          path: ./reports/screenshots

  remix-ide-vyper-plugin:
    docker:
      # specify the version you desire here
      - image: cimg/base:current

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
    resource_class:
      xlarge
      # - image: circleci/mongo:3.4.4
    environment:
      - COMMIT_AUTHOR_EMAIL: "yann@ethereum.org"
      - COMMIT_AUTHOR: "Circle CI"
    working_directory: ~/remix-project
    parallelism: 10
    steps:
      - node/install:
          install-yarn: true
          node-version: "v14.17.6"
      - browser-tools/install-chrome
      - browser-tools/install-chromedriver
      - run:
          command: |
            google-chrome --version
            chromedriver --version

          name: Check install
      - checkout
      - attach_workspace:
          at: .
      - run: unzip ./persist/dist.zip
      - restore_cache:
          keys:
            - v1-deps-{{ checksum "yarn.lock" }}
      - run: yarn
      - run: 
          name: Java
          command: sudo apt update && sudo apt install default-jre
      - run:
          name: Install Selenium
          command: yarn run selenium-install
      - run:
          name: Run Selenium
          command: yarn run selenium
          background: true
      - run: npx nx build vyper
      - run: ./apps/remix-ide/ci/browser_tests_vyper_plugin.sh
      - store_test_results:
          path: ./reports/tests
      - store_artifacts:
          path: ./reports/screenshots

  remix-ide-etherscan-plugin:
    docker:
      # specify the version you desire here
      - image: cimg/base:current

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
    resource_class:
      xlarge
      # - image: circleci/mongo:3.4.4
    environment:
      - COMMIT_AUTHOR_EMAIL: "yann@ethereum.org"
      - COMMIT_AUTHOR: "Circle CI"
    working_directory: ~/remix-project
    parallelism: 10
    steps:
      - node/install:
          install-yarn: true
          node-version: "v14.17.6"
      - browser-tools/install-chrome
      - browser-tools/install-chromedriver
      - run:
          command: |
            google-chrome --version
            chromedriver --version

          name: Check install
      - checkout
      - attach_workspace:
          at: .
      - run: unzip ./persist/dist.zip
      - restore_cache:
          keys:
            - v1-deps-{{ checksum "yarn.lock" }}
      - run: yarn
      - run: 
          name: Java
          command: sudo apt update && sudo apt install default-jre
      - run:
          name: Install Selenium
          command: yarn run selenium-install
      - run:
          name: Run Selenium
          command: yarn run selenium
          background: true
      - run: npx nx build etherscan
      - run: ./apps/remix-ide/ci/browser_tests_etherscan_plugin.sh
      - store_test_results:
          path: ./reports/tests
      - store_artifacts:
          path: ./reports/screenshots

  remix-ide-plugin-api:
    docker:
      # specify the version you desire here
      - image: cimg/base:current

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
    resource_class:
      xlarge
      # - image: circleci/mongo:3.4.4
    environment:
      - COMMIT_AUTHOR_EMAIL: "yann@ethereum.org"
      - COMMIT_AUTHOR: "Circle CI"
    working_directory: ~/remix-project
    parallelism: 10
    steps:
      - node/install:
          install-yarn: true
          node-version: "v14.17.6"
      - browser-tools/install-chrome
      - browser-tools/install-chromedriver
      - run:
          command: |
            google-chrome --version
            chromedriver --version

          name: Check install
      - checkout
      - attach_workspace:
          at: .
      - run: unzip ./persist/dist.zip
      - restore_cache:
          keys:
            - v1-deps-{{ checksum "yarn.lock" }}
      - run: yarn
      - run: 
          name: Java
          command: sudo apt update && sudo apt install default-jre
      - run:
          name: Install Selenium
          command: yarn run selenium-install
      - run:
          name: Run Selenium
          command: yarn run selenium
          background: true
      - run: ./apps/remix-ide/ci/browser_tests_plugin_api.sh
      - store_test_results:
          path: ./reports/tests
      - store_artifacts:
          path: ./reports/screenshots

  deploy-remix-live:
    docker:
      # specify the version you desire here
      - image: cimg/base:current

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
    resource_class:
      xlarge
      # - image: circleci/mongo:3.4.4
    environment:
      - COMMIT_AUTHOR_EMAIL: "yann@ethereum.org"
      - COMMIT_AUTHOR: "Circle CI"
      - FILES_TO_PACKAGE: "dist/apps/remix-ide/index.html dist/apps/remix-ide/404.html dist/apps/remix-ide/*raw-loader*.js dist/apps/remix-ide/assets dist/apps/remix-ide/main*.js dist/apps/remix-ide/polyfills*.js dist/apps/remix-ide/favicon.ico dist/apps/remix-ide/vendors~app*.js dist/apps/remix-ide/app*.js"
    working_directory: ~/remix-project

    steps:
      - node/install:
          install-yarn: true
          node-version: "v14.17.6"
      - checkout
      - run: yarn
      - run: yarn run downloadsolc_assets
      - run: yarn run build:production
      - run:
          name: Deploy
          command: |
            if [ "${CIRCLE_BRANCH}" == "remix_live" ]; then
              ./apps/remix-ide/ci/deploy_from_travis_remix-live.sh;
            fi

  deploy-remix-alpha:
    docker:
      # specify the version you desire here
      - image: cimg/base:current

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
    resource_class:
      xlarge
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4
    environment:
      - COMMIT_AUTHOR_EMAIL: "yann@ethereum.org"
      - COMMIT_AUTHOR: "Circle CI"
      - FILES_TO_PACKAGE: "dist/apps/remix-ide/index.html dist/apps/remix-ide/404.html dist/apps/remix-ide/*raw-loader*.js dist/apps/remix-ide/assets dist/apps/remix-ide/main*.js dist/apps/remix-ide/polyfills*.js dist/apps/remix-ide/favicon.ico dist/apps/remix-ide/vendors~app*.js dist/apps/remix-ide/app*.js"
    working_directory: ~/remix-project

    steps:
      - checkout
      - run: yarn
      - run: yarn run downloadsolc_assets
      - run: yarn run build:production
      - run:
          name: Deploy
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              ./apps/remix-ide/ci/deploy_from_travis_remix-alpha.sh;
            fi

  deploy-remix-beta:
    docker:
      # specify the version you desire here
      - image: cimg/base:current

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
    resource_class:
      xlarge
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4
    environment:
      - COMMIT_AUTHOR_EMAIL: "yann@ethereum.org"
      - COMMIT_AUTHOR: "Circle CI"
      - FILES_TO_PACKAGE: "dist/apps/remix-ide/index.html dist/apps/remix-ide/404.html dist/apps/remix-ide/*raw-loader*.js dist/apps/remix-ide/assets dist/apps/remix-ide/main*.js dist/apps/remix-ide/polyfills*.js dist/apps/remix-ide/favicon.ico dist/apps/remix-ide/vendors~app*.js dist/apps/remix-ide/app*.js"
    working_directory: ~/remix-project

    steps:
      - checkout
      - node/install:
          install-yarn: true
          node-version: "v14.17.6"
      - run: yarn
      - run: yarn run build:libs
      - run: yarn run downloadsolc_assets
      - run: yarn run build:production
      - run:
          name: Deploy
          command: |
            if [ "${CIRCLE_BRANCH}" == "remix_beta" ]; then
              ./apps/remix-ide/ci/deploy_from_travis_remix-beta.sh;
            fi
workflows:
  version: 2
  run_flaky_tests:
    when: << pipeline.parameters.run_flaky_tests >>
    jobs:
      - build
      - flaky-chrome:
          requires:
            - build
      - flaky-firefox:
          requires:
            - build
  build_all:
    unless: << pipeline.parameters.run_flaky_tests >>
    jobs:
      - build
      - lint:
          requires:
            - build
      - remix-libs:
          requires:
            - build
      - remix-ide-plugin-api:
          requires:
            - build
      - remix-ide-vyper-plugin:
          requires:
            - build
      - remix-ide-etherscan-plugin:
          requires:
            - build
      - remix-ide-chrome:
          requires:
            - build
      - remix-ide-firefox:
          requires:
            - build
      - deploy-remix-live:
          requires:
            - lint
            - remix-libs
            - remix-ide-chrome
            - remix-ide-firefox
            - remix-ide-plugin-api
            - remix-ide-vyper-plugin
            - remix-ide-etherscan-plugin
          filters:
            branches:
              only: remix_live
      - deploy-remix-alpha:
          requires:
            - lint
            - remix-libs
            - remix-ide-chrome
            - remix-ide-firefox
            - remix-ide-plugin-api
            - remix-ide-vyper-plugin
            - remix-ide-etherscan-plugin
          filters:
            branches:
              only: master
      - deploy-remix-beta:
          requires:
            - lint
            - remix-libs
            - remix-ide-chrome
            - remix-ide-firefox
            - remix-ide-plugin-api
            - remix-ide-vyper-plugin
            - remix-ide-etherscan-plugin
          filters:
            branches:
              only: remix_beta
