{
  "udapp.displayName": "Deploy & run transactions",
  "udapp.gasLimit": "Gas limit",
  "udapp.value": "Value",

  "udapp._comment_contractDropdownUI.tsx": "libs/remix-ui/run-tab/src/lib/components/contractDropdownUI.tsx",
  "udapp.contract": "Contract",
  "udapp.compiledBy": "compiled by {compilerName}",
  "udapp.warningEvmVersion": "Please make sure that the current network is compatible with this evm version: {evmVersion}. Otherwise any deployment will fail.",
  "udapp.infoSyncCompiledContractTooltip": "Click here to import contracts compiled from an external framework.This action is enabled when Remix is connected to an external framework (hardhat, truffle, foundry) through remixd.",
  "udapp.remixIpfsUdappTooltip": "Publishing the source code and metadata to IPFS facilitates source code verification using Sourcify and will greatly foster contract adoption (auditing, debugging, calling it, etc...)",
  "udapp.deploy": "Deploy",
  "udapp.publishTo": "Publish to",
  "udapp.atAddress": "At Address",
  "udapp.atAddressOptionsTitle1": "address of contract",
  "udapp.atAddressOptionsTitle2": "Interact with the deployed contract - requires the .abi file or  compiled .sol file to be selected in the editor (with the same compiler configuration)",
  "udapp.atAddressOptionsTitle3": "Compile a *.sol file or select a *.abi file.",
  "udapp.atAddressOptionsTitle4": "To interact with a deployed contract, either enter its address and compile its source *.sol file (with the same compiler settings) or select its .abi file in the editor. ",
  "udapp.contractOptionsTitle1": "Please compile *.sol file to deploy or access a contract",
  "udapp.contractOptionsTitle2": "Select a compiled contract to deploy or to use with At Address.",
  "udapp.contractOptionsTitle3": "Select and compile *.sol file to deploy or access a contract.",
  "udapp.contractOptionsTitle4": "When there is a compiled .sol file, choose the  contract to deploy or to use with At Address.",
  "udapp.checkSumWarning": "It seems you are not using a checksumed address.A checksummed address is an address that contains uppercase letters, as specified in {a}.Checksummed addresses are meant to help prevent users from sending transactions to the wrong address.",
  "udapp.isOverSizePromptEip170": "Contract creation initialization returns data with length of more than 24576 bytes. The deployment will likely fail if the current network has activated the eip 170. More info: {a}",
  "udapp.isOverSizePromptEip3860": "Contract creation init code exceeds the allowed max code size of 49152 bytes. The deployment will likely fail if the current network has activated the eip 3860. More info: {a}",
  "udapp.thisContractMayBeAbstract": "This contract may be abstract, it may not implement an abstract parent's methods completely or it may not invoke an inherited contract's constructor correctly.",
  "udapp.noCompiledContracts": "No compiled contracts",
  "udapp.addressOfContract": "Address of contract",
  "udapp.loadContractFromAddress": "Load contract from Address",
  "udapp.ok": "OK",
  "udapp.alert": "Alert",
  "udapp.proceed": "Proceed",
  "udapp.cancel": "Cancel",

  "udapp._comment_account.tsx": "libs/remix-ui/run-tab/src/lib/components/account.tsx",
  "udapp.account": "Account",
  "udapp.signAMessage": "Sign a message",
  "udapp.enterAMessageToSign": "Enter a message to sign",
  "udapp.hash": "hash",
  "udapp.signature": "signature",
  "udapp.injectedTitle": "Unfortunately it's not possible to create an account using injected provider. Please create the account directly from your provider (i.e metamask or other of the same type).",
  "udapp.createNewAccount": "Create a new account",
  "udapp.web3Title": "Creating an account is possible only in Personal mode. Please go to Settings to enable it.",
  "udapp.defaultTitle": "Unfortunately it's not possible to create an account using an external wallet ({selectExEnv}).",
  "udapp.text1": "Please provide a Passphrase for the account creation",
  "udapp.tooltipText1": "Account list is empty, please make sure the current provider is properly connected to remix",
  "udapp.modalTitle1": "Passphrase to sign a message",
  "udapp.modalMessage1": "Enter your passphrase for this account to sign the message",
  "udapp.copyAccount": "Copy account to clipboard",
  "udapp.signMsgUsingAccount": "Sign a message using this account",

  "udapp._comment_environment.tsx": "libs/remix-ui/run-tab/src/lib/components/environment.tsx",
  "udapp.environment": "Environment",
  "udapp.environmentDocs": "Click for docs about Environment",

  "udapp._comment_instanceContainerUI.tsx": "libs/remix-ui/run-tab/src/lib/components/instanceContainerUI.tsx",
  "udapp.deployedContracts": "Deployed Contracts",
  "udapp.deployAndRunClearInstances": "Clear instances list and reset recorder",
  "udapp.deployAndRunNoInstanceText": "Currently you have no contract instances to interact with.",

  "udapp._comment_recorderCardUI.tsx": "libs/remix-ui/run-tab/src/lib/components/recorderCardUI.tsx",
  "udapp.transactionsRecorded": "Transactions recorded",
  "udapp.transactionsCountTooltip": "The number of recorded transactions",
  "udapp.transactionSaveTooltip1": "No transactions to save",
  "udapp.transactionSaveTooltip2": "Save {count} transaction as scenario file",
  "udapp.transactionSaveTooltip3": "Save {count} transactions as scenario file",
  "udapp.infoRecorderTooltip": "Save transactions (deployed contracts and function executions) and replay them in another environment e.g Transactions created in Remix VM can be replayed in the Injected Provider.",
  "udapp.livemodeRecorderTooltip": "If contracts are updated after recording transactions, checking this box will run recorded transactions with the latest copy of the compiled contracts",
  "udapp.livemodeRecorderLabel": "Run transactions using the latest compilation result",
  "udapp.runRecorderTooltip": "Run transaction(s) from the current scenario file",
  "udapp.save": "Save",
  "udapp.run": "Run",

  "udapp._comment_contractGUI.tsx": "libs/remix-ui/run-tab/src/lib/components/contractGUI.tsx",
  "udapp.parameters": "Parameters",
  "udapp.copyParameters": "Copy encoded input parameters to clipboard",
  "udapp.copyCalldata": "Copy calldata to clipboard",
  "udapp.deployWithProxy": "Deploy with Proxy",
  "udapp.upgradeWithProxy": "Upgrade with Proxy"
}
